<?php

namespace Unit2\RouterNameLog\App;

use Magento\Framework\App\ActionFlag;
use Magento\Framework\App\AreaList;
use Magento\Framework\App\Request\ValidatorInterface as RequestValidator;
use Magento\Framework\App\RequestInterface;
use Magento\Framework\App\ResponseInterface;
use Magento\Framework\App\RouterListInterface;
use Magento\Framework\App\State;
use Magento\Framework\Event\ManagerInterface as EventManagerInterface;
use Magento\Framework\Message\ManagerInterface as MessageManager;
use Magento\Framework\ObjectManager\ObjectManager;
use Psr\Log\LoggerInterface;

class FrontController extends \Magento\Framework\App\FrontController
{
    //inyecta las dependecias para router, es una copia del constructor original e inyectas la variable logger
    //que es la que pidieron que el logger no tenga valor por defecto null
    /**
     * @var LoggerInterface|null
     */
    private $logger;

    public function __construct(RouterListInterface $routerList,
                                ResponseInterface $response,
                                ?RequestValidator $requestValidator = null,
                                ?MessageManager $messageManager = null,
                                ?LoggerInterface $logger = null,
                                ?State $appState = null,
                                ?AreaList $areaList = null,
                                ?ActionFlag $actionFlag = null,
                                ?EventManagerInterface $eventManager = null,
                                ?RequestInterface $request = null)
    {
        parent::__construct($routerList, $response, $requestValidator, $messageManager, $logger, $appState, $areaList, $actionFlag, $eventManager, $request);
        $this->logger = $logger
        ?? ObjectManager::getInstance()->get(LoggerInterface::class);
    }

    //tambien con ctrl + o  -> te muestra los overriders
    public function dispatch(RequestInterface $request)
    {
        foreach ($this->_routerList as $router){
            $routerName= get_class($router);
            $this->logger->alert($routerName);
        }
        //$this->logger->alert('holaa');
        return parent::dispatch($request); // TODO: Change the autogenerated stub
    }
}
